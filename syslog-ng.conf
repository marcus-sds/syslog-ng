@version:3.2

# syslog-ng configuration file.
#
# This should behave pretty much like the original syslog on RedHat. But
# it could be configured a lot smarter.
#
# See syslog-ng(8) and syslog-ng.conf(5) for more information.
#

options {
        flush_lines (0);
        time_reopen (10);
        log_fifo_size (1000);
        long_hostnames (off);
        use_dns (no);
        use_fqdn (no);
        create_dirs (no);
        keep_hostname (no);
};


source s_net { udp(ip(0.0.0.0) port(514)); };
destination s_net { file("/logdata/syslog/$YEAR$MONTH/syslog-$HOST-$DAY" create_dirs(yes)); };
destination s_perf { file("/logdata/perf/$YEAR$MONTH/$DAY/perf-$YEAR$MONTH$DAY$HOUR" create_dirs(yes) dir_perm(0755) dir_owner("root")); };
destination s_perfvm { file("/logdata/perfvm/$YEAR$MONTH/$DAY/perf-$YEAR$MONTH$DAY$HOUR" create_dirs(yes) dir_perm(0755) dir_owner("root")); };
destination s_ping { file("/logdata/multiping/$YEAR$MONTH/perf-$YEAR$MONTH$DAY" create_dirs(yes) dir_perm(0755) dir_owner("root")); };
destination s_netwalker { file("/logdata/netwalker/$YEAR$MONTH/perf-$YEAR$MONTH$DAY" create_dirs(yes) dir_perm(0755) dir_owner("root")); };
destination s_firewall { file("/logdata/firewall/$YEAR$MONTH/perf-$YEAR$MONTH$DAY$HOUR" create_dirs(yes) dir_perm(0755) dir_owner("root")); };
destination s_secuiwall { file("/logdata/secuiwall/$YEAR$MONTH/perf-$YEAR$MONTH$DAY$HOUR" create_dirs(yes) dir_perm(0755) dir_owner("root")); };
destination s_muskie { file("/logdata/muskie/$YEAR$MONTH/$DAY/muskie-$HOST-$YEAR$MONTH$DAY$HOUR" create_dirs(yes)); };

filter s_muskie   { match("HttpServer"); };
filter s_secuiwall_filter1   { match(",657,"); };
filter s_xapi   { (match("xapi connected from") or match("10.82.38.201") or match("nagios") or match("xe pif-param-set") or match("no iSCSI or NFS mount defined") or match("xapi:") or match("stunnel:")); };
filter s_perf   { program("perf"); };
filter s_perfvm   { program("perfvm"); };
filter s_ping   { program("multiping"); };
filter s_netwalker   { program("netwalker"); };
filter s_firewall   { match(" RT_FLOW "); };
filter s_secuiwall   { match("fw4_deny"); };

destination s_net1 { file("/logdata/swift/$YEAR$MONTH/$DAY/account-$HOST-$YEAR$MONTH$DAY$HOUR" create_dirs(yes)); };
destination s_net2 { file("/logdata/swift/$YEAR$MONTH/$DAY/container-$HOST-$YEAR$MONTH$DAY$HOUR" create_dirs(yes)); };
destination s_net3 { file("/logdata/swift/$YEAR$MONTH/$DAY/object-$HOST-$YEAR$MONTH$DAY$HOUR" create_dirs(yes)); };
destination s_net4 { file("/logdata/swift/$YEAR$MONTH/$DAY/proxy-$HOST-$YEAR$MONTH$DAY$HOUR" create_dirs(yes)); };
destination s_net1_err { file("/logdata/swift/$YEAR$MONTH/$DAY/account-err-$HOST-$YEAR$MONTH$DAY$HOUR" create_dirs(yes)); };
destination s_net2_err { file("/logdata/swift/$YEAR$MONTH/$DAY/container-err-$HOST-$YEAR$MONTH$DAY$HOUR" create_dirs(yes)); };
destination s_net3_err { file("/logdata/swift/$YEAR$MONTH/$DAY/object-err-$HOST-$YEAR$MONTH$DAY$HOUR" create_dirs(yes)); };
destination s_net4_err { file("/logdata/swift/$YEAR$MONTH/$DAY/proxy-err-$HOST-$YEAR$MONTH$DAY$HOUR" create_dirs(yes)); };

filter s_net1   { facility(local1) and not (level(notice)); };
filter s_net2   { facility(local2) and not (level(notice)); };
filter s_net3   { facility(local3) and not (level(notice)); };
filter s_net4   { facility(local4) and not (level(notice)); };
filter s_net1_err   { facility(local1) and level(notice); };
filter s_net2_err   { facility(local2) and level(notice); };
filter s_net3_err   { facility(local3) and level(notice); };
filter s_net4_err   { facility(local4) and level(notice); };

log { source(s_net); filter(s_net1); destination(s_net1); };
log { source(s_net); filter(s_net2); destination(s_net2); };
log { source(s_net); filter(s_net3); destination(s_net3); };
log { source(s_net); filter(s_net4); destination(s_net4); };

log { source(s_net); filter(s_net1_err); destination(s_net1_err); };
log { source(s_net); filter(s_net2_err); destination(s_net2_err); };
log { source(s_net); filter(s_net3_err); destination(s_net3_err); };
log { source(s_net); filter(s_net4_err); destination(s_net4_err); };


log { source(s_net); filter(s_muskie); destination(s_muskie); flags(final); };
log { source(s_net); filter(s_firewall); destination(s_firewall); flags(final); };
log { source(s_net); filter(s_secuiwall_filter1); flags(final); };
log { source(s_net); filter(s_secuiwall); destination(s_secuiwall); flags(final); };
log { source(s_net); filter(s_xapi); flags(final); };
log { source(s_net); filter(s_perf); destination(s_perf); flags(final); };
log { source(s_net); filter(s_perfvm); destination(s_perfvm); flags(final); };
log { source(s_net); filter(s_ping); destination(s_ping); flags(final); };
log { source(s_net); filter(s_netwalker); destination(s_netwalker); flags(final); };
log { source(s_net); destination(s_net); };
